kind: Namespace
apiVersion: v1
metadata:
  name: <%= @options[:app] %>
  labels:
    app.kubernetes.io/name: <%= @options[:app] %>
    app.kubernetes.io/version: <%= @options[:commit_hash] %>
    app.kubernetes.io/managed-by: cuber

---
apiVersion: v1
kind: Secret
metadata:
  name: regcred
  namespace: <%= @options[:app] %>
  labels:
    app.kubernetes.io/name: <%= @options[:app] %>
    app.kubernetes.io/version: <%= @options[:commit_hash] %>
    app.kubernetes.io/managed-by: cuber
data:
  .dockerconfigjson: <%= @options[:dockerconfigjson] %>
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: env
  namespace: <%= @options[:app] %>
  labels:
    app.kubernetes.io/name: <%= @options[:app] %>
    app.kubernetes.io/version: <%= @options[:commit_hash] %>
    app.kubernetes.io/managed-by: cuber
data:
  <% @options[:env].each do |key, value| %>
  <%= key %>: <%= value.to_json %>
  <% end %>

<% @options[:procs].each do |proc| %>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: <%= proc[:name] %>-deployment
  namespace: <%= @options[:app] %>
  labels:
    app.kubernetes.io/name: <%= @options[:app] %>
    app.kubernetes.io/version: <%= @options[:commit_hash] %>
    app.kubernetes.io/managed-by: cuber
spec:
  replicas: <%= proc[:scale] %>
  selector:
    matchLabels:
      app: <%= proc[:name] %>-proc
  template:
    metadata:
      labels:
        app: <%= proc[:name] %>-proc
    spec:
      containers:
      - name: <%= proc[:name] %>-proc
        image: <%= @options[:image] %>:<%= @options[:commit_hash] %>
        command: <%= proc[:cmd].shellsplit %>
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: env
      imagePullSecrets:
      - name: regcred
<% end %>

---
apiVersion: v1
kind: Service
metadata:
  name: load-balancer
  namespace: <%= @options[:app] %>
  labels:
    app.kubernetes.io/name: <%= @options[:app] %>
    app.kubernetes.io/version: <%= @options[:commit_hash] %>
    app.kubernetes.io/managed-by: cuber
spec:
  type: LoadBalancer
  selector:
    app: web-proc
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 3000
